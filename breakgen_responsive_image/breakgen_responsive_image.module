<?php

/**
 * Listen to breakgen generation and create responsive image styles accordingly.
 *
 * @param $key
 * @param $breakpoint
 * @param array $breakgen
 */
function breakgen_responsive_image_breakgen_post_save_image_styles($key, &$breakpoint, array &$breakgen){
    foreach ($breakgen as $groupName => $breakgenGroupConfiguration){
        if($breakgenGroupConfiguration['responsive_image'] === true){
            $isFallback = (isset($breakgenGroupConfiguration['responsive_image_fallback']) &&
                $breakgenGroupConfiguration['responsive_image_fallback'] === true);

            $imageStyleMachineName = $key . '_breakgen_' . $groupName;
            breakgen_responsive_image_merge($imageStyleMachineName, $groupName, $isFallback);

            // Generate deviation of image by percentage
            if (isset($breakgenGroupConfiguration['percentages'])) {
                foreach($breakgenGroupConfiguration['percentages'] as $percentage){
                    $imageStyleMachineName = $key . '.' . str_replace('%', '', $percentage)
                        . '_breakgen_' . $groupName;
                    $deviationGroupName = $groupName . '_' . str_replace('%', '', $percentage);
                    breakgen_responsive_image_merge($imageStyleMachineName, $deviationGroupName, $isFallback);
                }
            }
        }
    }
}

/**
 * Add information to existing image style or create image style.
 *
 * @param $imageStyleMachineName
 * @param $groupName
 * @param $isFallback
 */
function breakgen_responsive_image_merge($imageStyleMachineName, $groupName, $isFallback){
    $machineName = 'breakgen_responsive_image_' . $groupName;
    $fallbackMachineName = '_original image_';

    if($isFallback){
        $fallbackMachineName = $imageStyleMachineName;
    }

    $responsiveImageStyle = \Drupal\responsive_image\Entity\ResponsiveImageStyle::load($machineName);

    if($responsiveImageStyle === null){
        breakgen_responsive_image_create($machineName, $groupName, $imageStyleMachineName, $fallbackMachineName);
    }else{
        $imageStyleMappings = $responsiveImageStyle->get('image_style_mappings');
        $imageStyleMappings[0]['image_mapping']['sizes_image_styles'][] = $imageStyleMachineName;
        $responsiveImageStyle->set('image_style_mappings', $imageStyleMappings);
        if($fallbackMachineName !== '_original image_'){
            $responsiveImageStyle->set('fallback_image_style', $fallbackMachineName);
        }
        $responsiveImageStyle->save();
    }
}

/**
 * Create base responsive image style.
 *
 * @param $machineName
 * @param $groupName
 * @param $imageStyleMachineName
 * @param $fallbackMachineName
 */
function breakgen_responsive_image_create($machineName, $groupName, $imageStyleMachineName, $fallbackMachineName){
    $label = str_replace('.', ' ', str_replace('_', ' ', $groupName));
    $responsiveImageStyle = \Drupal\responsive_image\Entity\ResponsiveImageStyle::create([
        'id' => $machineName,
        'label' => "Breakgen: ". $label,
        'breakpoint_group' => 'responsive_image',
        'image_style_mappings' => [
            [
                'breakpoint_id' => 'responsive_image.viewport_sizing',
                'multiplier' => '1x',
                'image_mapping_type' => 'sizes',
                'image_mapping' => [
                    'sizes' => '100 vw',
                    'sizes_image_styles' => [
                        $imageStyleMachineName
                    ]
                ]
            ]
        ],
        'fallback_image_style' => $fallbackMachineName,
    ]);
    $responsiveImageStyle->save();
}

/**
 * Clear all generated responsive image styles.
 */
function breakgen_responsive_image_breakgen_pre_clear_image_styles()
{
    $imageStyleIds = \Drupal::entityQuery('responsive_image_style')
        ->condition('id', "breakgen_responsive_image_", 'CONTAINS')
        ->execute();

    $responsiveImageStyles = \Drupal\responsive_image\Entity\ResponsiveImageStyle::loadMultiple($imageStyleIds);

    \Drupal::entityTypeManager()->getStorage('responsive_image_style')->delete($responsiveImageStyles);
}